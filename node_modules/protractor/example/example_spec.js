describe('Test for Input Field Name', function(){
    
    it('should able on correct page', function(){
        browser.get("http://www.thetestroom.com/jswebapp/");
        expect(browser.getCurrentUrl()).toContain("jswebapp");
        expect(browser.getCurrentUrl()).toEqual("http://www.thetestroom.com/jswebapp/");
       
    });
    
    it('should generate correct text ', function(){
        browser.get("http://www.thetestroom.com/jswebapp/");
        var textMessage = "Subscribe the test";
        
        element(by.model('person.name')).sendKeys(textMessage);
        element(by.binding('person.name')).getText().then(function(text){
            expect(text).toEqual("Subscribe the test");
        });
        
    });
    
     it('should able adopt an animal', function(){
        browser.get("http://www.thetestroom.com/jswebapp/");
        element(by.buttonText("CONTINUE")).click();
        element(by.model("animal")).$("[value='1']").click();
         
        element.all(by.css(".ng-pristine option")).then(function(items){
            expect(items.length).toBe(4);
            expect(items[1].getText()).toBe("George the Turtle");
        });
         
        element(by.buttonText("CONTINUE")).click();
        
    });
    
});



/*
    // First Test Example
    
describe('Test for Input Field Name', function(){
    
    it('to test input field and check text output ', function(){
        browser.get("http://www.thetestroom.com/jswebapp/");
        element(by.model('person.name')).sendKeys('Subscribe the test');
        element(by.binding('person.name')).getText().then(function(text){
            console.log(text);
        });
        element(by.buttonText('CONTINUE')).click();
        element(by.model("animal")).$('[value="1"]').click();
        element(by.partialButtonText('CONT')).click();
    });
    
});*/


/*
    // First Test Example
describe('angularjs homepage', function() {
  it('should greet the named user', function() {
    browser.get('http://www.angularjs.org');

    element(by.model('yourName')).sendKeys('Julie');

    var greeting = element(by.binding('yourName'));

    expect(greeting.getText()).toEqual('Hello Julie!');
  });

  describe('todo list', function() {
    var todoList;

    beforeEach(function() {
      browser.get('http://www.angularjs.org');

      todoList = element.all(by.repeater('todo in todoList.todos'));
    });

    it('should list todos', function() {
      expect(todoList.count()).toEqual(2);
      expect(todoList.get(1).getText()).toEqual('build an AngularJS app');
    });

    it('should add a todo', function() {
      var addTodo = element(by.model('todoList.todoText'));
      var addButton = element(by.css('[value="add"]'));

      addTodo.sendKeys('write a protractor test');
      addButton.click();
       
      expect(todoList.count()).toEqual(3);
      expect(todoList.get(2).getText()).toEqual('write a protractor test');
    });
  });
});*/


//Om Spec.js

/*require( __dirname + '/../../PageObjects/Portfolio-Optimizer/all-page-objects.po.js' );

describe( 'Test Case: optsettings-country-roundlots', function() {

    describe( 'Test Step ID:635060', function() {

        it( 'Should launch BPM 2 application', function ()  {
            OptimizersMainPage.goToURL( '', true );
        } );

        it( 'Should click on the Wrench Drop down from the Application Header', function ()  {
            OptimizersMainPage.getWrenchIcon().click();
        } );

        it( 'Should set "Auto Optimize" to true', function ()  {
            OptimizersMainPage.setAutoOptimize( true );
        } );

        it( 'Should open  "Client:/bpm_html/Optsettings/Constraints_copy" document', function ()  {
            OptimizersMainPage.switchToDocument( 'Client:/Bpm_html/Optsettings/Country_Roundlots', true );
        } );

        it( 'Verifying if "Country_Roundlots" document appears without any errors', function ()  {
            ThiefHelperUtils.getDialog( 'FactSet Research Systems' ).isOpen().then( function( bool ) {
                if ( bool ) {
                    expect( false ).customError( 'Unable to Open Document' );
                    CommonFunctions.takeScreenShot();
                }
            } );
        } );

        it( 'Verifying the tile of the application is "Client:/Bpm_html/Optsettings/Country_Roundlots" ', function ()  {
            OptimizersMainPage.getDocumentName().getText().then( function ( text ) {
                if( text !== 'Client:/Bpm_html/Optsettings/Country_Roundlots' ) {
                    expect( false ).customError( 'Unable to load document'  );
                    CommonFunctions.takeScreenShot();
                }
            } );
        } );

    } );

    describe( 'Test Step ID: 635061', function() {

        it( 'Should click on the "Cog" wheel from the Application Header', function ()  {
            ThiefHelperUtils.getButton( 'Settings' ).press().then( function() {}, function( error ) {
                expect( false ).customError( 'Unable to click on settings button' );
                CommonFunctions.takeScreenShot();
            } );
        } );

        it( 'Should select "Strategy > Objective & Constraints" from the LHP', function ()  {
            OptimizersSettingsPage.getOptionFromLHP( 'Strategy', 'Objective & Constraints' ).click().then( function() {
                
                //Verifying if Objective and Constraints is selected and Highlighted
                OptimizersSettingsPage.getOptionFromLHP( 'Strategy', 'Objective & Constraints' ).
                getAttribute( 'class').then( function( classAttribute ) {
                    expect( classAttribute.indexOf( 'selected' ) > -1 ).
                    customError( 'Objective & Constrains is not Selected' );
                } );
            }, function() {
                expect( false ).customError( 'Cannot select "Strategy > Objective And Constraints"' );
                CommonFunctions.takeScreenShot();
            } );
        } );

        it( 'Should check "Bad Values" from the selected section', function() {
            SettingsStrategyObjectiveAndConstraints.getElementCheckBoxFromSelectedSection( 'Bad Values').then( function( element ) {
                element.click().then( function() {
                    
                    // Verifying if Bad Values in the selected list is checked
                    element.getAttribute( 'class').then( function( value ) {
                        expect( value.indexOf( 'checked' ) > -1).customError( 'Bad values is not checked in the selected section' );
                    } );
                }, function() {
                    expect( false ).customError( 'Cannot Check "Bad Values" from selected section' );
                    CommonFunctions.takeScreenShot();
                } );
            } );
        } );

        it( 'Should click on OK button in the settings page', function() {
            ThiefHelperUtils.getButton( 'OK' ).press().then( function() {}, function( error ) {
                expect( false ).customError( 'Unable to click on OK button in the Settings Page' );
                CommonFunctions.takeScreenShot();
            } );
        });

        it( 'Should verify if an error dialog box is displayed', function() {
            Utilities.getDialog( 'Alert!' ).isDisplayed().then( function() {}, function() {
                expect( false ).customError( 'Alert Dialog is not appeared' );
            } );
        });

    } );

    describe( 'Test Step ID: 635062', function() {

        it( 'Should click on OK button in the Alert Dialog box to close the Alert', function() {
            Utilities.getDialogButton( 'Alert!', 'OK' ).click().then( function() {

                // Verifying if dialog box is closed
                Utilities.getDialog( 'Alert' ).isDisplayed().then( function() {
                    expect( false ).customError( 'Dialog box is not closed' );
                }, function() {} );
            }, function() {
                expect( false ).customError( 'Cannot Click OK button in the Alert Popup' );
                CommonFunctions.takeScreenShot();
            } );
        } );

        it( 'Should clear "ABC" in the Asset Level input box in the RHP', function() {
            SettingsStrategyObjectiveAndConstraints.getInputBox( 'Asset Level:', 'Constraints', 'Roundlots' ).clear();
        } );

        it( 'Should click OK button in the Settings Page to close Settings page', function() {
            ThiefHelperUtils.getButton( 'OK' ).press().then( function() {
                // Verifying if Settings page is closed
                OptimizersSettingsPage.isSettingMode().then( function( bool ) {
                    expect( !bool ).customError( 'Settings page is not closed' );
                } );
            }, function( error ) {
                expect( false ).customError( 'Unable to click on OK button' );
                CommonFunctions.takeScreenShot();
            } );
        } );

        it( 'Should select Reports > Workspace from LHP', function() {
            OptimizersMainPage.getLHPOptionItemFromCategory( 'Initial Reports', 'Workspace' ).click();
        } );

        it( 'Should verify Totals value for Roundlots column is 0', function() {
            Reports.getValueFromCalculatedReport( 'Workspace', 'Totals', 'Roundlots',
                'slick-pane slick-pane-top slick-pane-left', 'slick-pane slick-pane-top slick-pane-right', '', '2' ).
                then( function( value ) {
                expect( value  === '0' ).customError( 'Totals Row value for Roundlots is not equal to 0' );
            } );
        } );

    } );

    describe( 'Test Step ID: 635063', function() {

        it( 'Should click on the "Cog" wheel from the Application Header', function ()  {
            ThiefHelperUtils.getButton( 'Settings' ).press().then( function() {}, function( error ) {
                expect( false ).customError( 'Unable to click on settings button' );
                CommonFunctions.takeScreenShot();
            } );
        } );

        it( 'Should check "Barra Defaults" from the selected section', function() {
            SettingsStrategyObjectiveAndConstraints.getElementCheckBoxFromSelectedSection( 'Barra Defaults' ).
            then( function( element ) {
                element.click().then( function() {

                    // Verifying if Barra Defaults in the selected list is checked
                    element.getAttribute( 'class').then( function( value ) {
                        expect( value.indexOf( 'checked' ) > -1).customError( 'Barra Defaults is not checked in the selected section' );
                    } );
                }, function() {
                    expect( false ).customError( 'Unable to check "Barra Defaults" from selected section' );
                    CommonFunctions.takeScreenShot();
                } );
            } );
        } );

        it( 'Should click on OK button in the settings page', function() {
            ThiefHelperUtils.getButton( 'OK' ).press().then( function() {}, function() {
                expect( false ).customError( 'Unable to click on OK button' );
                CommonFunctions.takeScreenShot();
            } );
        } );

        it( 'Should double click on OFDB VALUE column in the Workspace Report to sort in Ascending Order', function() {
            Reports.getAllColumnOfCalculatedReport( 'Workspace' ).then( function( elementRef ) {
                elementRef.forEach(function( element ) {
                    Utilities.scrollElementToVisibility( element.getWebElement() );
                    element.getText().then(function( value ) {
                        if ( value === 'OFDB VALUE' ) {
                            browser.actions().doubleClick( element ).perform();
                            Reports.getAscDecButton( 'Workspace', 'asc' ).isPresent().then( function( bool ) {
                                if ( !bool ) {
                                    browser.actions().doubleClick( element ).perform();
                                }
                            } );
                        }
                    });
                });
            } );
        });

        it( 'Should verify 3 Rows for the OFDB VALUES column is "--"', function() {
            UtilitiesSlickgrid.getColumnData( 'OFDB VALUE', 'Workspace' ).then( function( ofdbArr ) {
                ofdbArr.forEach( function( value, index ) {
                    if( index >= ofdbArr.length - 3 ){
                        expect( value === '--' ).customError( 'Values of 3 columns for OFDB VALUES column is not' +
                            'equal to --' );
                    }
                } );
            } );
        } );

        it( 'Should verify if "Citigroup Inc." row has 1.00 for "OFDB VALUE" column and "100" for Roundlots column', function () {
            UtilitiesSlickgrid.getColumnData( 'Asset Name', 'Workspace' ).then( function ( assetArr ) {
                UtilitiesSlickgrid.getColumnData( 'OFDB VALUE', 'Workspace' ).then( function( ofbdValueArr ) {
                    UtilitiesSlickgrid.getColumnData( 'Roundlots', 'Workspace' ).then( function( roundLotsArr ) {
                        assetArr.forEach( function ( assetName, index ) {
                            if( assetName === 'Citigroup Inc.' ) {
                                expect( ofbdValueArr[ index ] === '1.00' ).customError( 'OFDB Value for Citigroup Inc is not 1.00' );
                                expect( roundLotsArr[ index ] === '100' ).customError( 'Roundlots value for "Citigroup Inc is not 100"' );
                            }
                        } );
                    } );
                } );
            } );
        } );

        it( 'Should verify if "Coca-Cola Company" row has 1 for "OFDB VALUE" column and 100 Roundlots column ', function () {
            UtilitiesSlickgrid.getColumnData( 'Asset Name', 'Workspace' ).then( function ( assetArr ) {
                UtilitiesSlickgrid.getColumnData( 'OFDB VALUE', 'Workspace' ).then( function( ofbdValueArr ) {
                    UtilitiesSlickgrid.getColumnData( 'Roundlots', 'Workspace' ).then( function( roundLotsArr ) {
                        assetArr.forEach( function ( assetName, index ) {
                            if( assetName === 'Coca Cola Company' ) {
                                expect( ofbdValueArr[ index ] === '1' ).customError( 'OFDB Value for Coca Cola Company is not 1' );
                                expect( roundLotsArr[ index ] === '100' ).customError( 'Roundlots value for "Coca Cola Company' +
                                    ' is not 100"' );
                            }
                        } );
                    } );
                } );
            } );
        } );

    } );
    
    describe( 'Test Step ID: 635064', function () {

        it( 'Should click on the "Cog" wheel from the Application Header', function ()  {
            ThiefHelperUtils.getButton( 'Settings' ).press().then( function() {}, function( error ) {
                expect( false ).customError( 'Unable to click on settings button' );
                CommonFunctions.takeScreenShot();
            } );
        } );

        it( 'Should check "OFDB - Asset Over Barra" from the selected section', function() {
            SettingsStrategyObjectiveAndConstraints.getElementCheckBoxFromSelectedSection( 'OFDB - Asset Over Barra' ).
            then( function( element ) {
                element.click().then( function() {

                    // Verifying if OFDB - Asset Over Barra in the selected list is checked
                    element.getAttribute( 'class').then( function( value ) {
                        expect( value.indexOf( 'checked' ) > -1).customError( 'OFDB - Asset Over Barra is not checked in the selected section' );
                    } );
                }, function() {
                    expect( false ).customError( 'Unable to check "OFDB - Asset Over Barra" from selected section' );
                    CommonFunctions.takeScreenShot();
                } );
            } );
        } );

        it( 'Should click on OK button in the settings page', function() {
            OptimizersSettingsPage.getButton( 'OK' ).click();
        } );

        it( 'Should verify if "Roundlots" column has value 1 for first six rows and 10 for the next 3 rows', function () {
            UtilitiesSlickgrid.getColumnData( 'Roundlots', 'Workspace' ).then( function ( roundLotsArr ) {
                roundLotsArr.forEach( function( value, index ) {
                    if( index!== 0 && index <= 6 ) {
                        if( value !== '1' ) {
                            expect( false ).customError( 'Roundlots value for "'+index+'" is not 1 and has '+value+'' );
                        }
                    }else if ( index!= 0 && index <=9 ) {
                        if( value != '10' ) {
                            expect( false ).customError( 'Roundlots value for "'+index+'" is not 10 and has '+value+'' );
                        }
                    }
                } );
            } );
        } );

    } );

    describe( 'Test Step ID: 635065', function () {

        it( 'Should click on the Settings button in the Application Tool Bar', function () {
            ThiefHelperUtils.getButton( 'Settings' ).press().then( function() {}, function( error ) {
                expect( false ).customError( 'Unable to click on settings button' );
                CommonFunctions.takeScreenShot();
            } );
        } );

        it( 'Should Check "Asset Over General" constraint in the Selected section', function () {
            SettingsStrategyObjectiveAndConstraints.getElementCheckBoxFromSelectedSection( 'Asset over General' )
                .then( function ( ref ) {
                    if ( ref === false ) {
                        expect( false ).customError( 'No Such Constraint is available in the Selected section' );
                        CommonFunctions.takeScreenShot();
                    } else {
                        ref.click().then( function () {
                            SettingsStrategyObjectiveAndConstraints.getElementFromSelectedSection( 'Asset over General' )
                                .then( function ( ref ) {
                                    ref.getAttribute( 'class' ).then( function ( attr ) {
                                        if( attr.indexOf( 'selected' ) === -1 ) {
                                            expect( false ).customError( 'Asset Over General is not selected in the Selected section' );
                                            CommonFunctions.takeScreenShot();
                                        }
                                    } );
                                } );
                        } );
                    }
                }, function () {
                    expect( false ).customError( 'Unable to check Asset Over General in the Selected section' );
                } );
        } );

        it( 'Should click on "OK" button in the Settings Page', function () {
            ThiefHelperUtils.getButton( 'OK' ).press().then( function() {}, function( error ) {
                expect( false ).customError( 'Unable to click on OK button' );
                CommonFunctions.takeScreenShot();
            } );
        } );

        it( 'Should verify if "Roundlots" column has "55" value for all the Rows', function () {
            UtilitiesSlickgrid.getColumnData( 'Roundlots', 'Workspace' ).then( function ( roundLotsArr ) {
                roundLotsArr.forEach( function ( value, index ) {
                    if( index !== 0 ) {
                        if( value !== '55' ) {
                            expect( false ).customError( 'Value for "'+ index +'" index is not 55 and has "'+value+'"' );
                        }
                    }
                } );
            } );
        } );

    } );

    describe( 'Test Step ID: 635066', function () {

        it( 'Should click on the Settings button in the Application Tool Bar', function () {
            ThiefHelperUtils.getButton( 'Settings' ).press().then( function() {}, function( error ) {
                expect( false ).customError( 'Unable to click on settings button' );
                CommonFunctions.takeScreenShot();
            } );
        } );

        it( 'Should Check "Asset Over Country" constraint in the Selected section', function () {
            SettingsStrategyObjectiveAndConstraints.getElementCheckBoxFromSelectedSection( 'Asset Over Country' )
                .then( function ( ref ) {
                    if ( ref === false ) {
                        expect( false ).customError( 'No Such Constraint is available in the Selected section' );
                        CommonFunctions.takeScreenShot();
                    } else {
                        ref.click().then( function () {
                            SettingsStrategyObjectiveAndConstraints.getElementFromSelectedSection( 'Asset Over Country' )
                                .then( function ( ref ) {
                                    ref.getAttribute( 'class' ).then( function ( attr ) {
                                        if( attr.indexOf( 'selected' ) === -1 ) {
                                            expect( false ).customError( 'Asset Over Country is not selected in the Selected section' );
                                            CommonFunctions.takeScreenShot();
                                        }
                                    } );
                                } );
                        } );
                    }
                }, function () {
                    expect( false ).customError( 'Unable to check Asset Over Country in the Selected section' );
                } );
        } );

        it( 'Should click on "OK" button in the Settings Page', function () {
            ThiefHelperUtils.getButton( 'OK' ).press().then( function() {}, function( error ) {
                expect( false ).customError( 'Unable to click on OK button' );
                CommonFunctions.takeScreenShot();
            } );
        } );

        it( 'Should verify if "Roundlots" column has "55" value for all the Rows', function () {
            UtilitiesSlickgrid.getColumnData( 'Roundlots', 'Workspace' ).then( function ( roundLotsArr ) {
                roundLotsArr.forEach( function ( value, index ) {
                    if( index !== 0 ) {
                        if( value !== '55' ) {
                            expect( false ).customError( 'Value for "'+ index +'" index is not 55 and has "'+value+'"' );
                        }
                    }
                } );
            } );
        } );

    } );

    describe( 'Test Step ID: 635067', function () {

        it( 'Should click on the Settings button in the Application Tool Bar', function () {
            ThiefHelperUtils.getButton( 'Settings' ).press().then( function() {}, function( error ) {
                expect( false ).customError( 'Unable to click on settings button' );
                CommonFunctions.takeScreenShot();
            } );
        } );

        it( 'Should Check "None" constraint in the Selected section', function () {
            SettingsStrategyObjectiveAndConstraints.getElementCheckBoxFromSelectedSection( 'None' )
                .then( function ( ref ) {
                    if ( ref === false ) {
                        expect( false ).customError( 'No Such Constraint is available in the Selected section' );
                        CommonFunctions.takeScreenShot();
                    } else {
                        ref.click().then( function () {
                            SettingsStrategyObjectiveAndConstraints.getElementFromSelectedSection( 'None' )
                                .then( function ( ref ) {
                                    ref.getAttribute( 'class' ).then( function ( attr ) {
                                        if( attr.indexOf( 'selected' ) === -1 ) {
                                            expect( false ).customError( 'None is not selected in the Selected section' );
                                            CommonFunctions.takeScreenShot();
                                        }
                                    } );
                                } );
                        } );
                    }
                }, function () {
                    expect( false ).customError( 'Unable to check None Constraint in the Selected section' );
                } );
        } );

        it( 'Should click on "OK" button in the Settings Page', function () {
            ThiefHelperUtils.getButton( 'OK' ).press().then( function() {}, function( error ) {
                expect( false ).customError( 'Unable to click on OK button' );
                CommonFunctions.takeScreenShot();
            } );
        } );

        it( 'Should verify if "Roundlots" column has "0" value for all the Rows', function () {
            UtilitiesSlickgrid.getColumnData( 'Roundlots', 'Workspace' ).then( function ( roundLotsArr ) {
                roundLotsArr.forEach( function ( value, index ) {
                    if( index !== 0 ) {
                        if( value !== '0' ) {
                            expect( false ).customError( 'Value for "'+ index +'" index is not 0 and has "'+value+'"' );
                        }
                    }
                } );
            } );
        } );

    } );

    describe( 'Test Step ID: 635068', function () {

        it( 'Should click on the Settings button in the Application Tool Bar', function () {
            ThiefHelperUtils.getButton( 'Settings' ).press().then( function() {}, function( error ) {
                expect( false ).customError( 'Unable to click on settings button' );
                CommonFunctions.takeScreenShot();
            } );
        } );

        it( 'Should Check "OFDB - Asset Over Barra" constraint in the Selected section', function () {
            SettingsStrategyObjectiveAndConstraints.getElementCheckBoxFromSelectedSection( 'OFDB - Asset Over Barra' )
                .then( function ( ref ) {
                    if ( ref === false ) {
                        expect( false ).customError( 'No Such Constraint is available in the Selected section' );
                        CommonFunctions.takeScreenShot();
                    } else {
                        ref.click().then( function () {
                            SettingsStrategyObjectiveAndConstraints.getElementFromSelectedSection( 'OFDB - Asset Over Barra' )
                                .then( function ( ref ) {
                                    ref.getAttribute( 'class' ).then( function ( attr ) {
                                        if( attr.indexOf( 'selected' ) === -1 ) {
                                            expect( false ).customError( 'OFDB - Asset Over Barra is not selected in the Selected section' );
                                            CommonFunctions.takeScreenShot();
                                        }
                                    } );
                                } );
                        } );
                    }
                }, function () {
                    expect( false ).customError( 'Unable to check OFDB - Asset Over Barra Constraint in the Selected section' );
                } );
        } );

        it( 'Should click on "OK" button in the Settings Page', function () {
            ThiefHelperUtils.getButton( 'OK' ).press().then( function() {}, function( error ) {
                expect( false ).customError( 'Unable to click on OK button' );
                CommonFunctions.takeScreenShot();
            } );
        } );

        it( 'Should double click on Roundlots column in the Workspace Report to sort in Ascending Order', function() {
            Reports.getAllColumnOfCalculatedReport( 'Workspace' ).then( function( elementRef ) {
                elementRef.forEach(function( element ) {
                    Utilities.scrollElementToVisibility( element.getWebElement() );
                    element.getText().then(function( value ) {
                        if ( value === 'Roundlots' ) {
                            browser.actions().doubleClick( element ).perform();
                            Reports.getAscDecButton( 'Workspace', 'asc' ).isPresent().then( function( bool ) {
                                if ( !bool ) {
                                    browser.actions().doubleClick( element ).perform();
                                }
                            } );
                        }
                    });
                });
            } );
        } );

        it( 'Should verify if "Roundlots" column has value 1 for first six rows and 10 for the next 9 rows', function () {
            UtilitiesSlickgrid.getColumnData( 'Roundlots', 'Workspace' ).then( function ( roundLotsArr ) {
                roundLotsArr.forEach( function( value, index ) {
                    if( index!== 0 && index <= 6 ) {
                        if( value !== '1' ) {
                            expect( false ).customError( 'Roundlots value for "'+index+'" is not 1 and has '+value+'' );
                        }
                    }else if ( index!= 0 && index <=15 ) {
                        if( value != '10' ) {
                            expect( false ).customError( 'Roundlots value for "'+index+'" is not 10 and has '+value+'' );
                        }
                    }
                } );
            } );
        } );

        it( 'Should double click on OFDB VALUE column in the Workspace Report to sort in Ascending Order', function() {
            Reports.getAllColumnOfCalculatedReport( 'Workspace' ).then( function( elementRef ) {
                elementRef.forEach(function( element ) {
                    Utilities.scrollElementToVisibility( element.getWebElement() );
                    element.getText().then(function( value ) {
                        if ( value === 'OFDB VALUE' ) {
                            browser.actions().doubleClick( element ).perform();
                            Reports.getAscDecButton( 'Workspace', 'asc' ).isPresent().then( function( bool ) {
                                if ( !bool ) {
                                    browser.actions().doubleClick( element ).perform();
                                }
                            } );
                        }
                    });
                });
            } );
        } );

        it( 'Should verify if "Roundlots" value is "100" for the first 2 rows where "OFDB VALUE" value is "--"', function () {
            UtilitiesSlickgrid.getColumnData( 'Roundlots', 'Workspace' ).then( function( roundLotsArr ) {
                UtilitiesSlickgrid.getColumnData( 'OFDB VALUE', 'Workspace' ).then( function( ofbdArr ) {
                    roundLotsArr.forEach( function ( roundLotsValue, index ) {
                        if( index > roundLotsArr.length - 3 && index < roundLotsArr.length ) {
                          if( !(roundLotsValue === '100' && ofbdArr[ index ] === '--') ) {
                              expect( false ).customError( 'Values are not matched as expected' );
                              CommonFunctions.takeScreenShot();
                          }
                        }
                    } );
                } );
            } );
        } );

        it( 'Should verify if "Roundlots" value is "50" for the 3rd row where "OFDB VALUE" is "--"', function () {
            UtilitiesSlickgrid.getColumnData( 'Roundlots', 'Workspace' ).then( function( roundLotsArr ) {
                UtilitiesSlickgrid.getColumnData( 'OFDB VALUE', 'Workspace' ).then( function( ofbdArr ) {
                    roundLotsArr.forEach( function ( roundLotsValue, index ) {
                        if( index === roundLotsArr.length - 3 ) {
                            if( !(roundLotsValue === '50' && ofbdArr[ index ] === '--') ) {
                                expect( false ).customError( 'Values are not matched as expected' );
                                CommonFunctions.takeScreenShot();
                            }
                        }
                    } );
                } );
            } );
        } );

    } );
    
    describe( 'Test Step ID: 635069', function () {

        it( 'Should click on the Settings button in the Application Tool Bar', function () {
            ThiefHelperUtils.getButton( 'Settings' ).press().then( function() {}, function( error ) {
                expect( false ).customError( 'Unable to click on settings button' );
                CommonFunctions.takeScreenShot();
            } );
        } );

        it( 'Should Check "OFDB - Country" constraint in the Selected section', function () {
            SettingsStrategyObjectiveAndConstraints.getElementCheckBoxFromSelectedSection( 'OFDB - Country' )
                .then( function ( ref ) {
                    if ( ref === false ) {
                        expect( false ).customError( 'No Such Constraint is available in the Selected section' );
                        CommonFunctions.takeScreenShot();
                    } else {
                        ref.click().then( function () {
                            SettingsStrategyObjectiveAndConstraints.getElementFromSelectedSection( 'OFDB - Country' )
                                .then( function ( ref ) {
                                    ref.getAttribute( 'class' ).then( function ( attr ) {
                                        if( attr.indexOf( 'selected' ) === -1 ) {
                                            expect( false ).customError( 'OFDB - Country is not selected in the Selected section' );
                                            CommonFunctions.takeScreenShot();
                                        }
                                    } );
                                } );
                        } );
                    }
                }, function () {
                    expect( false ).customError( 'Unable to check OFDB - Country Constraint in the Selected section' );
                } );
        } );

        it( 'Should click on "OK" button in the Settings Page', function () {
            ThiefHelperUtils.getButton( 'OK' ).press().then( function() {}, function( error ) {
                expect( false ).customError( 'Unable to click on OK button' );
                CommonFunctions.takeScreenShot();
            } );
        } );

        it( 'Should double click on Country column in the Workspace Report to sort in Ascending Order', function() {
            Reports.getAllColumnOfCalculatedReport( 'Workspace' ).then( function( elementRef ) {
                elementRef.forEach(function( element ) {
                    Utilities.scrollElementToVisibility( element.getWebElement() );
                    element.getText().then(function( value ) {
                        if ( value === 'COUNTRY' ) {
                            browser.actions().doubleClick( element ).perform();
                            Reports.getAscDecButton( 'Workspace', 'asc' ).isPresent().then( function( bool ) {
                                if ( !bool ) {
                                    browser.actions().doubleClick( element ).perform();
                                }
                            } );
                        }
                    });
                });
            } );
        } );

        it( 'Should verify if "Roundlots" values for "Austria" Country are "6"', function () {
            UtilitiesSlickgrid.getColumnData( 'COUNTRY', 'Workspace' ).then( function ( countries ) {
                UtilitiesSlickgrid.getColumnData( 'Roundlots', 'Workspace' ).then( function ( roundlotsArr ) {
                    countries.forEach( function ( country, index ) {
                        if( country === 'Austria' ) {
                            if( roundlotsArr[ index ] !== '6' ) {
                                expect( false ).customError( 'Roundlots Value for "Austria" in "'+index+'" row is not "6" and has' +
                                    '"'+roundlotsArr[ index ]+'"' );
                            }
                        }
                    } );
                } );
            } );
        } );

    } );

    describe( 'Test Step ID: 635070', function () {

        it( 'Should click on the Settings button in the Application Tool Bar', function () {
            ThiefHelperUtils.getButton( 'Settings' ).press().then( function() {}, function( error ) {
                expect( false ).customError( 'Unable to click on settings button' );
                CommonFunctions.takeScreenShot();
            } );
        } );

        it( 'Should Check "OFDB Country - Missing" constraint in the Selected section', function () {
            SettingsStrategyObjectiveAndConstraints.getElementCheckBoxFromSelectedSection( 'OFDB Country - Missing' )
                .then( function ( ref ) {
                    if ( ref === false ) {
                        expect( false ).customError( 'No Such Constraint is available in the Selected section' );
                        CommonFunctions.takeScreenShot();
                    } else {
                        ref.click().then( function () {
                            SettingsStrategyObjectiveAndConstraints.getElementFromSelectedSection( 'OFDB Country - Missing' )
                                .then( function ( ref ) {
                                    ref.getAttribute( 'class' ).then( function ( attr ) {
                                        if( attr.indexOf( 'selected' ) === -1 ) {
                                            expect( false ).customError( 'OFDB Country - Missing is not selected in the Selected section' );
                                            CommonFunctions.takeScreenShot();
                                        }
                                    } );
                                } );
                        } );
                    }
                }, function () {
                    expect( false ).customError( 'Unable to check OFDB Country - Missing Constraint in the Selected section' );
                } );
        } );

        it( 'Should click on "OK" button in the Settings Page', function () {
            ThiefHelperUtils.getButton( 'OK' ).press().then( function() {}, function( error ) {
                expect( false ).customError( 'Unable to click on OK button' );
                CommonFunctions.takeScreenShot();
            } );
        } );

        it( 'Should double click on Country column in the Workspace Report to sort in Ascending Order', function() {
            Reports.getAllColumnOfCalculatedReport( 'Workspace' ).then( function( elementRef ) {
                elementRef.forEach(function( element ) {
                    Utilities.scrollElementToVisibility( element.getWebElement() );
                    element.getText().then(function( value ) {
                        if ( value === 'COUNTRY' ) {
                            browser.actions().doubleClick( element ).perform();
                            Reports.getAscDecButton( 'Workspace', 'asc' ).isPresent().then( function( bool ) {
                                if ( !bool ) {
                                    browser.actions().doubleClick( element ).perform();
                                }
                            } );
                        }
                    });
                });
            } );
        } );

        it( 'Should verify if "Roundlots" values for "Austria" Country are "50"', function () {
            UtilitiesSlickgrid.getColumnData( 'COUNTRY', 'Workspace' ).then( function ( countries ) {
                UtilitiesSlickgrid.getColumnData( 'Roundlots', 'Workspace' ).then( function ( roundlotsArr ) {
                    countries.forEach( function ( country, index ) {
                        if( country === 'Austria' ) {
                            if( roundlotsArr[ index ] !== '50' ) {
                                expect( false ).customError( 'Roundlots Value for "Austria" in "'+index+'" row is not "50" and has' +
                                    '"'+roundlotsArr[ index ]+'"' );
                            }
                        }
                    } );
                } );
            } );
        } );

    } );

    describe( 'Test Step ID: 635071', function () {

        it( 'Should click on the Settings button in the Application Tool Bar', function () {
            ThiefHelperUtils.getButton( 'Settings' ).press().then( function() {}, function( error ) {
                expect( false ).customError( 'Unable to click on settings button' );
                CommonFunctions.takeScreenShot();
            } );
        } );

        it( 'Should Check "Custom - Set Missing" constraint in the Selected section', function () {
            SettingsStrategyObjectiveAndConstraints.getElementCheckBoxFromSelectedSection( 'Custom - Set Missing' )
                .then( function ( ref ) {
                    if ( ref === false ) {
                        expect( false ).customError( 'No Such Constraint is available in the Selected section' );
                        CommonFunctions.takeScreenShot();
                    } else {
                        ref.click().then( function () {
                            SettingsStrategyObjectiveAndConstraints.getElementFromSelectedSection( 'Custom - Set Missing' )
                                .then( function ( ref ) {
                                    ref.getAttribute( 'class' ).then( function ( attr ) {
                                        if( attr.indexOf( 'selected' ) === -1 ) {
                                            expect( false ).customError( 'Custom - Set Missing is not selected in the Selected section' );
                                            CommonFunctions.takeScreenShot();
                                        }
                                    } );
                                } );
                        } );
                    }
                }, function () {
                    expect( false ).customError( 'Unable to check Custom - Set Missing Constraint in the Selected section' );
                } );
        } );

        it( 'Should click on "OK" button in the Settings Page', function () {
            ThiefHelperUtils.getButton( 'OK' ).press().then( function() {}, function( error ) {
                expect( false ).customError( 'Unable to click on OK button' );
                CommonFunctions.takeScreenShot();
            } );
        } );

        it( 'Should double click on Country column in the Workspace Report to sort in Ascending Order', function() {
            Reports.getAllColumnOfCalculatedReport( 'Workspace' ).then( function( elementRef ) {
                elementRef.forEach(function( element ) {
                    Utilities.scrollElementToVisibility( element.getWebElement() );
                    element.getText().then(function( value ) {
                        if ( value === 'COUNTRY' ) {
                            browser.actions().doubleClick( element ).perform();
                            Reports.getAscDecButton( 'Workspace', 'asc' ).isPresent().then( function( bool ) {
                                if ( !bool ) {
                                    browser.actions().doubleClick( element ).perform();
                                }
                            } );
                        }
                    });
                });
            } );
        } );

        it( 'Should verify if "Roundlots" values for "Austria" Country are "100"', function () {
            UtilitiesSlickgrid.getColumnData( 'COUNTRY', 'Workspace' ).then( function ( countries ) {
                UtilitiesSlickgrid.getColumnData( 'Roundlots', 'Workspace' ).then( function ( roundlotsArr ) {
                    countries.forEach( function ( country, index ) {
                        if( country === 'Austria' ) {
                            if( roundlotsArr[ index ] !== '50' ) {
                                expect( false ).customError( 'Roundlots Value for "Austria" in "'+index+'" row is not "50" and has' +
                                    '"'+roundlotsArr[ index ]+'"' );
                            }
                        }
                    } );
                } );
            } );
        } );

    } );
    
    describe( 'Test Step ID: 635072', function () {

        it( 'Should click on the Settings button in the Application Tool Bar', function () {
            ThiefHelperUtils.getButton( 'Settings' ).press().then( function() {}, function( error ) {
                expect( false ).customError( 'Unable to click on settings button' );
                CommonFunctions.takeScreenShot();
            } );
        } );

        it( 'Should Check "Custom - Set Missing" constraint in the Selected section', function () {
            SettingsStrategyObjectiveAndConstraints.getElementCheckBoxFromSelectedSection( 'Custom - Set Missing' )
                .then( function ( ref ) {
                    if ( ref === false ) {
                        expect( false ).customError( 'No Such Constraint is available in the Selected section' );
                        CommonFunctions.takeScreenShot();
                    } else {
                        ref.click();
                    }
                }, function () {
                    expect( false ).customError( 'Unable to check Custom - Set Missing Constraint in the Selected section' );
                } );
        } );

        it( 'Should clear "Roundlot" value and enter 100 for "Australia"', function () {
            SettingsStrategyObjectiveAndConstraints.getInputBoxFromReport( 'Australia', 1 ).click().then( function() {
                 browser.sleep( 2000 );
                SettingsStrategyObjectiveAndConstraints.getInputBoxFromReport( 'Australia', 1, true ).clear().sendKeys( '100' );
            }, function() {} );
        } );

        it( 'Should verify if "Roundlot" value for "Australia" is set to "100"', function () {
            SettingsStrategyObjectiveAndConstraints.getInputBoxFromReport( 'Australia', 1, true ).getAttribute( 'value' ).then( function( value ) {
                if( value !== '100' ) {
                    expect( false ).customError( 'Roundlot Value for "Australia" is not 100' );
                    CommonFunctions.takeScreenShot();
                }
            } );
        } );
        
    } );
    
    describe( 'Test Step ID: 635073', function () {
        
        it( 'Should verify if "Custom - Set Missing" is selected in the Selceted section', function () {
            SettingsStrategyObjectiveAndConstraints.getElementFromSelectedSection( 'Custom - Set Missing' )
                .then( function ( ref ) {
                    ref.getAttribute( 'class' ).then( function ( attr ) {
                        if( attr.indexOf( 'selected' ) === -1 ) {
                            expect( false ).customError( 'Custom - Set Missing is not selected in the Selected section' );
                            CommonFunctions.takeScreenShot();
                        }
                    } );
                } );
        } );

        it( 'Should clear "Roundlot" value and enter 99 for "Austria"', function () {
            SettingsStrategyObjectiveAndConstraints.getInputBoxFromReport( 'Austria', 1 ).click().then( function() {
                browser.sleep( 2000 );
                SettingsStrategyObjectiveAndConstraints.getInputBoxFromReport( 'Austria', 1, true ).clear().sendKeys( '99' );
            }, function() {} );
        } );

        it( 'Should verify if "Roundlot" value for "Austria" is set to "99"', function () {
            SettingsStrategyObjectiveAndConstraints.getInputBoxFromReport( 'Austria', 1, true ).getAttribute( 'value' ).then( function( value ) {
                if( value !== '99' ) {
                    expect( false ).customError( 'Roundlot Value for "Austria" is not 99' );
                    CommonFunctions.takeScreenShot();
                }
            } );
        } );
        
    } );

    describe( 'Test Step ID: 635074', function () {

        it( 'Should click on OK button in the settings page', function() {
            ThiefHelperUtils.getButton( 'OK' ).press().then( function() {}, function( error ) {
                expect( false ).customError( 'Unable to click on OK button in the Settings Page' );
                CommonFunctions.takeScreenShot();
            } );
        } );

        it( 'Should double click on Country column in the Workspace Report to sort in Ascending Order', function() {
            Reports.getAllColumnOfCalculatedReport( 'Workspace' ).then( function( elementRef ) {
                elementRef.forEach(function( element ) {
                    Utilities.scrollElementToVisibility( element.getWebElement() );
                    element.getText().then(function( value ) {
                        if ( value === 'COUNTRY' ) {
                            browser.actions().doubleClick( element ).perform();
                            Reports.getAscDecButton( 'Workspace', 'asc' ).isPresent().then( function( bool ) {
                                if ( !bool ) {
                                    browser.actions().doubleClick( element ).perform();
                                }
                            } );
                        }
                    });
                });
            } );
        } );

        it( 'Should verify if Roundlot value for all "Australia" rows are "100" and "Austria" rows are "99"', function () {
            UtilitiesSlickgrid.getColumnData( 'COUNTRY', 'Workspace' ).then( function( countryArr ) {
                UtilitiesSlickgrid.getColumnData( 'Roundlots', 'Workspace' ).then( function ( roundLotsArr ) {
                    countryArr.forEach( function ( country, index ) {
                        if( country === 'Australia' ) {
                            if( roundLotsArr[ index ] !== '100' ) {
                                expect( false ).customError( 'Roundlots Value for Australia at "'+index+'" is not 100' );
                            }
                        } else if( country === 'Austria' ) {
                            if( roundLotsArr[ index ] !== '99' ) {
                                expect( false ).customError( 'Roundlots Value for Austria at "'+index+'" is not 99' );
                            }
                        }
                    } );
                } );
            } );
        } );

    } );

} );*/
